[
    {
        "group": "Github",
        "tags": [
            "tips"
        ],
        "content": "<p>Filter Github issues by thumb reaction: <code>is:issue is:open label:enhancement sort:reactions-+1-desc<\/code><\/p>"
    },
    {
        "group": "jQuery",
        "tags": [
            "event"
        ],
        "content": "<p>Emit custom event<\/p>\n<pre><code class=\"language-javascript\">\/\/ Emit\n$(document).trigger('plugin.action', [{foo:true}, param1, param2]);\n\n\/\/ Listener\n$(document).on('plugin.action', function(event, data, param1, param2) {\n  console.log(data.foo);\n});\n\n\/\/ Listener\n$(document).on('plugin.action', callback);\nvar callback = function(event, data, param1, param2) {\n  console.log(data.foo);\n}<\/code><\/pre>"
    },
    {
        "group": "PHP",
        "tags": [
            "time"
        ],
        "content": "<p>Measure processing time<\/p>\n<pre><code class=\"language-php\">$timeStart = microtime(true);\n\n\/\/ code here..\n\n$timeEnd = microtime(true);\n$timeProcess = ($timeEnd - $timeStart);\n\n\/\/ Generated in 0.0043 seconds.\necho 'Generated in ' . number_format($timeProcess, 4) . ' seconds.';<\/code><\/pre>"
    },
    {
        "group": "PHP",
        "tags": [
            "xml"
        ],
        "content": "<p>Handling DomDocument error<\/p>\n<pre><code class=\"language-php\">$libXmlError = libxml_use_internal_errors(true);\n\n$dom       = new DOMDocument('1.0', 'UTF-8');\n$xmlString = '&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;root&gt;\n    &lt;trunk&gt;test&lt;\/trumk&gt;\n&lt;\/root&gt;';\n\n\n\/\/ Supress it because warning is not generated by libxml\nif (@$dom-&gt;loadXml($xmlString) !== false) {\n    \/\/ codes..\n} else {\n    $xmlError = libxml_get_last_error();\n\n    \/\/ XML error: Opening and ending tag mismatch: trunk line 3 and trumk - line 3!\n    $error[] = sprintf('XML error: %s - line %s', $xmlError-&gt;message, $xmlError-&gt;line);\n}\nlibxml_use_internal_errors($libXmlError);<\/code><\/pre>"
    },
    {
        "group": "PHP",
        "tags": [
            "exception"
        ],
        "content": "<p>Custom exception<\/p>\n<pre><code class=\"language-php\">namespace Mdz\\Snippet;\n\nclass HttpException extends \\Exception {}\nclass NotFoundHttpException extends HttpException {}\n\n\/\/ How to use?\nthrow new \\Mdz\\Snippet\\NotFoundHttpException('The message');<\/code><\/pre>"
    },
    {
        "group": "PHP",
        "tags": [
            "class"
        ],
        "content": "<p><a href=\"https:\/\/www.php.net\/manual\/en\/language.oop5.anonymous.php\">Anonymous class<\/a><\/p>\n<pre><code class=\"language-php\">$object = new class($arrays) extends \\Bags {\n    \/\/ private $items;\n\n    public function set(string $key, mixed $value): void\n    {\n        $this-&gt;items[$key] = $value;\n    }\n};\n\n$object-&gt;set('key', 'value')<\/code><\/pre>"
    },
    {
        "group": "PHP",
        "tags": [
            "curl"
        ],
        "content": "<p>A simple get remote content with <a href=\"https:\/\/www.php.net\/manual\/en\/function.file-get-contents.php\">file_get_contents()<\/a>:<\/p>\n<pre><code class=\"language-php\">\/\/ Require allow_url_fopen to be enabled for different domain\n$result = file_get_contents('https:\/\/example.com\/file.json');<\/code><\/pre>\n<p>Use <a href=\"https:\/\/www.php.net\/manual\/en\/intro.curl.php\">CURL<\/a> to remote content:<\/p>\n<pre><code class=\"language-php\">$curl = curl_init();\n\ncurl_setopt($curl, CURLOPT_URL, 'http:\/\/example.com\/file.json');\ncurl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\ncurl_setopt($curl, CURLOPT_HEADER, 0);\n$result = curl_exec($curl);\ncurl_close($curl);<\/code><\/pre>"
    },
    {
        "group": "PHP",
        "tags": [
            "ipaddress"
        ],
        "content": "<pre><code class=\"language-php\">function getIp()\n{\n    return getenv('HTTP_CLIENT_IP') ?: (\n        getenv('HTTP_X_FORWARDED_FOR') ?: (\n            getenv('HTTP_X_FORWARDED') ?: (\n                getenv('HTTP_FORWARDED_FOR') ?: (\n                    getenv('HTTP_FORWARDED') ?: (\n                        getenv('REMOTE_ADDR') ?: $_SERVER['REMOTE_ADDR']\n                    )\n                )\n            )\n        )\n    );\n}<\/code><\/pre>"
    }
]